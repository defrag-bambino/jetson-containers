#
# this dockerfile roughly follows the 'Install ROS From Source' procedures from:
#   https://index.ros.org/doc/ros2/Installation/Foxy/Linux-Development-Setup/
#
ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0
FROM ${BASE_IMAGE}

# 
# install development packages
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
		libgeos-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# install packages for yolov5 and sahi
RUN python3 -m pip install -U --ignore-requires-python \
		matplotlib \
        numpy \
        PyYAML \
        requests \
        scipy \
        tqdm \
        tensorboard \
        pandas \
        seaborn \
        fire \
        shapely \
        pybboxes \
        terminaltables

RUN python3 -m pip install -U --no-deps \
		yolov5 \
        sahi


# 
# build protobuf and install onnx
#
RUN git clone --branch v3.16.0git clone https://github.com/protocolbuffers/protobuf.git && \
    cd protobuf && \
    git submodule update --init --recursive && \
    mkdir build_source && cd build_source \
    cmake ../cmake -Dprotobuf_BUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc -DCMAKE_POSITION_INDEPENDENT_CODE=ON -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc) && \
    make install && \
    cd ..

RUN git clone https://github.com/onnx/onnx.git && \
    cd onnx && \
    git submodule update --init --recursive && \
    set CMAKE_ARGS=-DONNX_USE_LITE_PROTO=ON && \
    pip install -e . && \
    cd ..

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /
